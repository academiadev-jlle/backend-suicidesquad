buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
		amazonAwsVersion = '1.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:${amazonAwsVersion}")
	}
}

plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'jacoco'
	id 'net.ltgt.apt' version '0.19'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'br.com.academiadev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

configurations {
	querydsl.extendsFrom compileClasspath
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.228'
    }
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('io.jsonwebtoken:jjwt:0.9.1')

	compile('io.springfox:springfox-swagger-ui:2.9.2')
	compile('io.springfox:springfox-swagger2:2.9.2')
	implementation('org.springframework.social:spring-social-core:1.1.6.RELEASE')
	implementation('org.springframework.social:spring-social-facebook:2.0.3.RELEASE')

	implementation('org.mapstruct:mapstruct-jdk8:1.2.0.Final')
	compileOnly('org.mapstruct:mapstruct-processor:1.2.0.Final')
	annotationProcessor('org.mapstruct:mapstruct-processor:1.2.0.Final')

	compileOnly('org.projectlombok:lombok:1.18.4')
	annotationProcessor('org.projectlombok:lombok:1.18.4')

	compile('com.querydsl:querydsl-core:4.1.3')
	compile('com.querydsl:querydsl-jpa:4.1.3')
	compileOnly('com.querydsl:querydsl-apt:4.1.3:jpa')
	
	compile("com.h2database:h2")
	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	
	compile 'com.amazonaws:aws-java-sdk-s3'

}

querydsl {
	jpa = true
	querydslSourcesDir = "src/main/generated"
}

sourceSets {
	main.java.srcDirs += 'build/generated/source/apt/main'
	main.java.srcDirs += 'src/main/generated'
}

// Herdar configurações do Gradle
// Possibilita isso:
// ./gradlew bootRun -Dspring.profiles.active=prod
bootRun.systemProperties = System.properties

compileJava {
	aptOptions.processors.add(0, 'org.mapstruct.ap.MappingProcessor')
	aptOptions.processors.add(0, 'lombok.launch.AnnotationProcessorHider$AnnotationProcessor')
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

test {
	systemProperty 'spring.profiles.active', 'test'
}
